// Максимальная ширина контейнера
// $maxWidth: 1236;

// Стили шрифта и отступы
@mixin font-style ($fw,$lh,$ls,$cl) {
   font-weight: $fw;
   line-height: $lh;
   letter-spacing: $ls + px;
   color: $cl;
}

// Адаптивное (резиновое) свойство
@mixin adaptive-property ($property, $pcSize, $mobSize, $maxWidth) {
   // $property указываем точное название свойства (width, height и т.д.)
   // $maxWidth указываем значение ширины полотна дизайна в px (только цивры без px)
   // $pcSize указываем максимальное значение размера шрифта в макете (только цивры без px)
   // $mobSize указываем минимальное значение размера шрифта в макете (только цивры без px)
   // $maxWidth: 1236;
   $addSize: $pcSize - $mobSize;
   $addMobSize: $addSize + $addSize * 0.7;
   @media (max-width: 767px) {
      #{$property}: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px) / #{$maxWidth}));
   }
   @media (min-width: 767px) {
      #{$property}: calc(#{$mobSize + px} + #{$addSize} * (100vw / #{$maxWidth}));
   }
   @media (min-width: #{$maxWidth + px}) {
      #{$property}: #{$pcSize + px};
   }
}

@mixin adaptive-padding-top-bottom ($pcSize, $mobSize, $maxWidth) {
   // $maxWidth указываем значение ширины полотна дизайна в px (только цивры без px)
   // $pcSize указываем максимальное значение размера шрифта в макете (только цивры без px)
   // $mobSize указываем минимальное значение размера шрифта в макете (только цивры без px)
   // $maxWidth: 1236;
   $addSize: $pcSize - $mobSize;
   $addMobSize: $addSize + $addSize * 0.7;
   @media (max-width: 767px) {
      padding-top: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px) / #{$maxWidth}));
      padding-bottom: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px) / #{$maxWidth}));
   }
   @media (min-width: 767px) {
      padding-top: calc(#{$mobSize + px} + #{$addSize} * (100vw / #{$maxWidth}));
      padding-bottom: calc(#{$mobSize + px} + #{$addSize} * (100vw / #{$maxWidth}));
   }
   @media (min-width: #{$maxWidth + px}) {
      padding-top: #{$pcSize + px};
      padding-bottom: #{$pcSize + px};
   }
}

@mixin adaptive-property-vh ($property, $pcSize, $mobSize, $maxWidth) {
   // $property указываем точное название свойства (width, height и т.д.)
   // $maxWidth указываем значение ширины полотна дизайна в px (только цивры без px)
   // $pcSize указываем максимальное значение размера шрифта в макете (только цивры без px)
   // $mobSize указываем минимальное значение размера шрифта в макете (только цивры без px)
   // $maxWidth: 1236;
   $addSize: $pcSize - $mobSize;
   $addMobSize: $addSize + $addSize * 0.7;
   @media (max-width: 767px) {
      #{$property}: calc(#{$mobSize + vh} + #{$addMobSize} * ((100vw - 320px) / #{$maxWidth}));
   }
   @media (min-width: 767px) {
      #{$property}: calc(#{$mobSize + vh} + #{$addSize} * (100vw / #{$maxWidth}));
   }
   @media (min-width: #{$maxWidth + px}) {
      #{$property}: #{$pcSize + vh};
   }
}

// // Адаптивный (резиновый) шрифт
// @mixin adaptiv-font-size ($pcSize, $mobSize) {
//    // $maxWidth указываем значение ширины полотна дизайна в px (только цивры без px)
//    // $pcSize указываем максимальное значение размера шрифта в макете (только цивры без px)
//    // $mobSize указываем минимальное значение размера шрифта в макете (только цивры без px)
//    // $maxWidth: 1236;
//    $addSize: $pcSize - $mobSize;
//    $addMobSize: $addSize + $addSize * 0.7;
//    @media (max-width: 767px) {
//       font-size: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px) / #{$maxWidth}));
//    }
//    @media (min-width: 767px) {
//       font-size: calc(#{$mobSize + px} + #{$addSize} * (100vw / #{$maxWidth}));
//    }
//    @media (min-width: #{$maxWidth + px}) {
//       font-size: #{$pcSize + px};
//    }
// }

